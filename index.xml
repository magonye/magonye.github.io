<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learnings and thoughts</title>
    <link>http://magonye.github.io/index.xml</link>
    <description>Recent content on Learnings and thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Aug 2017 08:26:43 +0200</lastBuildDate>
    <atom:link href="http://magonye.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Password Manager: Why and how to store passwords securely</title>
      <link>http://magonye.github.io/post/password-manager/</link>
      <pubDate>Thu, 17 Aug 2017 08:26:43 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/password-manager/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://magonye.github.io/img/password-manager.jpg&#34; alt=&#34;Password Manager&#34; title=&#34;Password Manager&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;the-problem&#34;&gt;The Problem&lt;/h1&gt;

&lt;p&gt;Currently I&amp;rsquo;m working on a the team that needs to handle with a lot of passwords. These passwords are critical for the company, as they are mainly Payment Provider password accounts.
Since now, we were using different kind of storage mechanisms, non of them really secure (internal confluence pages, shared plain text files, etc&amp;hellip;).&lt;/p&gt;

&lt;p&gt;So, in order to upgrade our security standards, we needed to choose some mechanism that could provide us the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Secure&lt;/strong&gt;: Of course this was the main goal, we wanted something really secure.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Collaborative&lt;/strong&gt;: We needed something that could be accessed from different computers, from inside the company, and outside, as we have a colleague on remote.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cross-Platform&lt;/strong&gt;: We have several computer flavours on the team (OSX - Win - Linux).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;the-solution&#34;&gt;The solution&lt;/h1&gt;

&lt;p&gt;After some research, and also consulting our security consultants, we decided to use &lt;a href=&#34;http://keepass.info/&#34;&gt;KeePass&lt;/a&gt;. KeePass is a free open source password manager that stores passwords in an encrypted database, and locked by a master password or/and a key file.&lt;/p&gt;

&lt;p&gt;KeePass uses very secure encryption algorithms (AES and Twofish). You can find more information &lt;a href=&#34;http://keepass.info/features.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can place the encrypted password file on a company shared folder, on cloud or even on local at your machine. As much secure the place you stored it, the better.&lt;/p&gt;

&lt;p&gt;Some security rules are recommended: the usage of strong and long master password, and defining a rotation for the master password are some of them. Our master password is 100 char length, and it rotates every 30 days. This is something that KeePass helps you, with a lot of useful options and tips.&lt;/p&gt;

&lt;p&gt;There are a lot of implementations of KeePass, you can found them &lt;a href=&#34;http://keepass.info/download.html&#34;&gt;here&lt;/a&gt;. As you could see, all most known platforms are covered, from computers to mobile devices.
Some of these implementations allows you to store the encrypted password file on a cloud storage, so the combinations are multiple, you need to choose the one that fits you more.&lt;/p&gt;

&lt;h1 id=&#34;what-did-we-learn&#34;&gt;What did we learn?&lt;/h1&gt;

&lt;p&gt;We realized that not everybody inside the team was storing their password properly, so we installed a personal KeePass file for those, so they could stored their password safely. They improved their personal security, and the security of the team, as well.&lt;/p&gt;

&lt;p&gt;We also realized that we can store on KeePass almost everything, not only payment provider passwords, also infrastructure passwords or important documents and files. Everything now is secured!!!&lt;/p&gt;

&lt;h1 id=&#34;which-are-the-next-steps&#34;&gt;Which are the next steps?&lt;/h1&gt;

&lt;p&gt;We want to create two different password files, on for test environments and another for production environments. Now we have only one file, with both environment together. With the split, we will gain security, and we will be able to give more granularity access to our environments, depending of the role of the team member. There are team members that don&amp;rsquo;t need to have access to our production environments, only to the test ones.&lt;/p&gt;

&lt;p&gt;Do you have any experience with password managers? Do you know a better way to solve this? Please, give me your feedback, it will be very appreciated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git: how to squash commits already pushed</title>
      <link>http://magonye.github.io/post/git-squash/</link>
      <pubDate>Tue, 08 Aug 2017 08:30:46 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/git-squash/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://magonye.github.io/img/git-squash-photo.jpg&#34; alt=&#34;Git Squash Main photo&#34; title=&#34;Git Squash Main photo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A few days ago I was working on feature in a project, and after a lot of commits and pushes, I wanted to show to my colleagues my changes&amp;hellip;. but I wanted to show them in a single commit.&lt;/p&gt;

&lt;p&gt;How could I join my 10 commits in a single one?&lt;/p&gt;

&lt;p&gt;I had heard about squashing commits with git before, so I was confident it would be easy to do.&lt;/p&gt;

&lt;p&gt;Googling a little, and reading some examples, I was confident about what I had to do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rebase -i HEAD~10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can look at the &lt;a href=&#34;https://git-scm.com/docs/git-rebase#_interactive_mode&#34;&gt;git documentation&lt;/a&gt;, if you want to know more about &lt;em&gt;git rebase&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;The key is the interactive mode (&lt;strong&gt;-i&lt;/strong&gt;), that allows you to edit the commits which are being rebased.&lt;/p&gt;

&lt;p&gt;At this point, the editor  opened, with the list of commits that I was rebasing, and some instructions. Something similar to this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pick affab1e The first commit for the feature
pick accab1e The second commit for the feature
...
pick abcdef1 The last commit for the feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, I only had to change the second and following commits, replacing &lt;em&gt;pick&lt;/em&gt; with &lt;em&gt;squash&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pick affab1e The first commit for the feature
squash accab1e The second commit for the feature
...
squash abcdef1 The last commit for the feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After looking to my &lt;em&gt;git log&lt;/em&gt;, I was exulting. Now the log looked amazing, with my new brand feature in a very single commit.&lt;/p&gt;

&lt;p&gt;But the problems began when I tried to push the &lt;em&gt;rebased&lt;/em&gt; commit. Git didn&amp;rsquo;t allow me, because I was required to do a &lt;em&gt;git pull&lt;/em&gt; before.&lt;/p&gt;

&lt;p&gt;Here I got stack on an evil loop:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://magonye.github.io/img/git-squash-evilloop.png&#34; alt=&#34;Git Squash Evil Loop&#34; style=&#34;width: 400px;&#34;/&gt;&lt;br /&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After a few attempts, and the priceless help of a colleague, I realized that I couldn&amp;rsquo;t go forward with the squash this way.&lt;/p&gt;

&lt;p&gt;This process would work to me if I hadn&amp;rsquo;t pushed the commits that I wanted to squash. On this scenario, Git wouldn&amp;rsquo;t ask me for a &lt;em&gt;git pull&lt;/em&gt;, and I could push my squashed commit without problems. And that is because my remote repository wouldn&amp;rsquo;t have any of the commits I was trying to squash, as my local repo would be beyond my remote repo.&lt;/p&gt;

&lt;p&gt;What I needed to do was to force push with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push origin +branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this command, that worked to me as a charm, finally I was able to push my feature to the branch as a single commit, although I had already pushed it before in separated commits.&lt;/p&gt;

&lt;p&gt;You can find more info about &lt;strong&gt;+&amp;lt;refspec&amp;gt;&lt;/strong&gt; command at the official documentation of &lt;a href=&#34;https://git-scm.com/docs/git-push#git-push---force&#34;&gt;git push&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Do you have any experience with squash? Do you know a better way to solve this? Please, give me your feedback, it will be very appreciated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>july 2017</title>
      <link>http://magonye.github.io/post/july-2017/</link>
      <pubDate>Sat, 05 Aug 2017 09:33:07 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/july-2017/</guid>
      <description>&lt;p&gt;It was a very challenging month!&lt;/p&gt;

&lt;p&gt;We started a Community of Practice at my work. It&amp;rsquo;s very exciting to share and learn things with other colleagues. We&amp;rsquo;re doing some katas and lighting talks. It&amp;rsquo;s only the beginning, but I think we can improve a lot with these meetings.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m also reading some books. I&amp;rsquo;m reading two of them (Sandro Mancuso&amp;rsquo;s &lt;strong&gt;The Software Craftsman&lt;/strong&gt; and &lt;strong&gt;Growing Object Oriented Software&lt;/strong&gt;) with other people. It&amp;rsquo;s very interesting to read a book with some other people. When talking about the book, you can see another point of view about the same chapters, and ask or share thoughts.&lt;/p&gt;

&lt;p&gt;I also started the Intro to TDD by &lt;a href=&#34;http://www.jbrains.ca/&#34;&gt;J.BRains&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I read all these posts during July:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/0x13a/why-null-references-are-a-bad-idea&#34;&gt;Why null references are a bad idea&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.genbetadev.com/paradigmas-de-programacion/el-resurgir-de-la-programacion-funcional&#34;&gt;El resurgir de la programación funcional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.genbetadev.com/formacion/pattern-matching&#34;&gt;Pattern matching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/suhas_chatekar/why-should-you-use-standard-http-methods-while-designing-rest-apis&#34;&gt;Why should you use standard http methods while designing rest apis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://culto.latercera.com/2017/03/15/deje-de-leer/&#34;&gt;Dejé de leer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.freecodecamp.org/finding-time-to-become-a-better-developer-eebc154881b2&#34;&gt;Finding time to become a better developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/andreasklinger/comments-explain-why-not-what-and-2-more-rules-on-writing-good-comments&#34;&gt;Comments explain why not what and 2 more rules on writing good comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/raulavila/my-experience-with-pair-programming&#34;&gt;My experience with pair programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.takipi.com/5-step-recipe-everything-you-need-to-know-for-staying-up-to-date-in-java/&#34;&gt;5 step recipe everything you need to know for staying up to date in java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/pbeekums/you-cant-learn-everything&#34;&gt;You can&amp;rsquo;t learn everything&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/storage/assets/5776001-dzone-rc241-declarativepipelinewithjenkins.pdf&#34;&gt;Declarative pipeline with Jenkins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/notes/kent-beck/mastering-programming/1184427814923414&#34;&gt;Mastering programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/ben/my-three-tips-for-maintaining-fitness-and-a-healthy-lifestyle-as-a-software-developer&#34;&gt;My three tips for maintaining fitness and a healthy lifestyle as a software developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/scalawilliam/unit-testing-is-simple&#34;&gt;Unit testing is simple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/binarforge/seven-useful-programming-habits&#34;&gt;Seven useful programming habits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/gazebo_c/making-and-taking-babysteps&#34;&gt;Making and taking babysteps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/samjarman/how-to-get-started-with-public-speaking&#34;&gt;How to get started with public speaking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.samjarman.co.nz/blog/code-reviews&#34;&gt;Code reviews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/hitman666/git-branching-done-right-with-gitflow--improving-code-quality-with-code-reviews&#34;&gt;Git branching done right with gitflow: improving code quality with code reviews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/pbeekums/the-problem-with-heroes-in-software-development&#34;&gt;The problem with heroes in software development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/mohamed3on/brief-introduction-to-salts-in-hashing&#34;&gt;Brief introduction to salts in hashing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/jmourtada/a-quick-introduction-to-git&#34;&gt;A quick introduction to git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@mike_acton/12-tips-for-making-the-best-use-of-your-time-909be33398b4&#34;&gt;12 tips for making the best use of your time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://langui.sh/2010/11/14/pbpaste-pbcopy-in-mac-os-x-or-terminal-clipboard-fun/&#34;&gt;pbpaste-pbcopy in mac os x or terminal clipboard fun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/bormod/how-to-choose-an-open-source-project-to-contribute-to&#34;&gt;How to choose an open source project to contribute to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.cleancoder.com/uncle-bob/2017/07/11/PragmaticFunctionalProgramming.html&#34;&gt;Pragmatic Functional Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/gonedark/you-changed-the-code-you-didnt-refactor-the-code&#34;&gt;You changed the code, you didn&amp;rsquo;t refactor the code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/samjarman/how-to-supercharge-your-learning-of-new-technologies&#34;&gt;How to supercharge your learning of new technologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/schreiber_chris/the-benefits-of-having-a-craftsman-in-your-team&#34;&gt;The benefits of having a craftsman in your team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dzone.com/articles/optional-anti-patterns&#34;&gt;Optional: anti-patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/nishparadox/builder-design-pattern&#34;&gt;Builder design pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.agustinperalt.es/volver-estudiar/&#34;&gt;Volver a estudiar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hackernoon.com/my-journey-towards-software-craftsmanship-3efdd53ac9fb&#34;&gt;My journey towards software craftsmanship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/maurobringolf/open-source-9-steps-to-my-first-feature-contribution-in-babel&#34;&gt;Open source: 9 steps to my first feature contribution in Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.targetprocess.com/articles/speed-in-software-development/&#34;&gt;Speed in software development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/tamrrat/blogging-driven-learning&#34;&gt;Blogging driven learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/gonedark/git---command-line-vs-guis&#34;&gt;Git: command line vs guis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/jackmarchant/no-excuses-write-unit-tests&#34;&gt;No excuses write unit tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>june 2017</title>
      <link>http://magonye.github.io/post/june-2017/</link>
      <pubDate>Fri, 30 Jun 2017 20:43:32 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/june-2017/</guid>
      <description>&lt;p&gt;This month has been a very productive one. Actually I&amp;rsquo;m reading three books at a time: &lt;strong&gt;Clean Code&lt;/strong&gt; [&lt;em&gt;Uncle Bob&lt;/em&gt;], &lt;strong&gt;Test Driven Development by Example&lt;/strong&gt; [&lt;em&gt;Kent Beck&lt;/em&gt;] and &lt;strong&gt;The Software Craftsman&lt;/strong&gt; [&lt;em&gt;Sandro Mancuso&lt;/em&gt;].&lt;/p&gt;

&lt;p&gt;Besides the books, I&amp;rsquo;ve read the following links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/130256611&#34;&gt;INTERACTION DRIVEN DESIGN - Sandro Mancuso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dDofYAOkpts&#34;&gt;Introduction to DDD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wecodesignpodcast.com/2017/06/06/toma-de-requisitos/&#34;&gt;Toma-de-requisitos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&#34;&gt;Logs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.koalite.com/2017/05/evitar-la-deuda-tecnica-es-un-error/&#34;&gt;Technical debt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://programar.cloud/post/demo-del-api-gateway-kong/&#34;&gt;Security on APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ronjeffries.com/xprog/articles/refactoring-not-on-the-backlog/&#34;&gt;Ron Jeffries&amp;rsquo; Refactoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.to/nishparadox/builder-design-pattern&#34;&gt;Builder design pattern&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codurance.com/2017/06/13/how-do-I-convince/&#34;&gt;Sandro Mancuso&amp;rsquo;s Codurance Blog - How do I convince&amp;hellip;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chapter 22 of Growing Object-Oriented Software (Goos)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.msdn.microsoft.com/ericgu/2017/06/22/notdd/&#34;&gt;NoTDD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>may 2017</title>
      <link>http://magonye.github.io/post/may-2017/</link>
      <pubDate>Sat, 24 Jun 2017 01:06:03 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/may-2017/</guid>
      <description>&lt;p&gt;This month has been a very quiet month. No much reading.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve just finished the &amp;ldquo;&lt;a href=&#34;https://www.coursera.org/learn/aprendiendo-a-aprender/home/welcome&#34;&gt;Learning how to learn&lt;/a&gt;&amp;rdquo; course at Coursera.&lt;/p&gt;

&lt;p&gt;I also finished a very interesting course at Udemy: &amp;ldquo;&lt;a href=&#34;https://www.udemy.com/how-to-become-a-better-developer/&#34;&gt;How to become a better developer&lt;/a&gt;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I would recommend both courses to everybody. They are clear, very well explained, and the topics are very helpfull. If you want to be a better developer and you have a lot of things to learn, you may consider to take these courses.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>april 2017</title>
      <link>http://magonye.github.io/post/april-2017/</link>
      <pubDate>Sun, 30 Apr 2017 18:07:02 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/april-2017/</guid>
      <description>&lt;p&gt;My current read book is Clean Code, by Robert C. Martin. This is a MUST book, and it&amp;rsquo;s some kind embarrassing I didn&amp;rsquo;t read it before.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m also attending the &amp;ldquo;&lt;a href=&#34;https://www.coursera.org/learn/aprendiendo-a-aprender/home/welcome&#34;&gt;Learning how to learn&lt;/a&gt;&amp;rdquo; course at Coursera.&lt;/p&gt;

&lt;p&gt;With the book, I&amp;rsquo;m trying to fix my fault, and with the course I&amp;rsquo;m trying to pave the road. If I want to learn a lot of things, I need to know how to become efficient.&lt;/p&gt;

&lt;p&gt;These are all my readings in this month:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://12factor.net/&#34;&gt;The Twelve Factor Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://training.docker.com/introduction-to-docker&#34;&gt;Introduction to Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://training.docker.com/docker-fundamentals&#34;&gt;Docker fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://training.docker.com/docker-operations&#34;&gt;Docker Operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rogerdudler.github.io/git-guide/&#34;&gt;Simple Git command guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KsVWdGOnHZU&#34;&gt;IntelliJ IDEA Tips and Tricks Part I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=EvXpgL2iho4&#34;&gt;IntelliJ IDEA Tips and Tricks Part II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codurance.com/2015/03/16/installing-zprezto-a-quick-guide/&#34;&gt;How to install Prezto with zsh for your OS X terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/&#34;&gt;Spotify Engineering Culture Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://labs.spotify.com/2014/09/20/spotify-engineering-culture-part-2/&#34;&gt;Spotify Engineering Culture Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>welcome to my blog</title>
      <link>http://magonye.github.io/post/welcome-to-my-blog/</link>
      <pubDate>Fri, 31 Mar 2017 23:43:44 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/welcome-to-my-blog/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve just created this blog for learning pourposes. I&amp;rsquo;m going to learn a lot of things. I think this blog can help me, but also some of my learnings can help someone else.&lt;/p&gt;

&lt;p&gt;I hope you enjoy it as I&amp;rsquo;m going to enjoy it, and feel free to comment, suggest or  correct any of the content I will be posting here.&lt;/p&gt;

&lt;p&gt;Remember that everything is about learning, enjoying, sharing and teaching. No matter  yours skills, the most important is the will of learn and teach.&lt;/p&gt;

&lt;p&gt;Who am I? I&amp;rsquo;m Mike, a programmer that thought, some time ago, that he already knew everything that was needed to know to be a good programmer, but now, the only thing that I&amp;rsquo;m sure is that I have a long journey. A journey to learn to be a better professional. And that journey will never end!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://magonye.github.io/about/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://magonye.github.io/about/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;image left&#34;&gt;
&lt;img src=&#34;http://magonye.github.io/img/main/magonye.png&#34; width=&#34;100px&#34;&gt;
&lt;/span&gt;
Mike Gonzalez &lt;br&gt;&lt;br&gt;
Software Engineer since 2000: I&amp;rsquo;ve been a bored (also boring, I guess&amp;hellip;) Java developer for many many years. I made my job, without caring my methodology or skills. I wasn&amp;rsquo;t concerned about doing my job with professionalism neither enthusiasm.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Father of two incredible kids: Adrià and Claudia.&lt;/p&gt;

&lt;p&gt;Runner and free athlete: I think we should care also our body and health, as we care our mind and skills. The mix of these two worlds, makes us better humans.&lt;/p&gt;

&lt;p&gt;Software Learner: I&amp;rsquo;ve just realized I was at the wrong path. I&amp;rsquo;ve just change my mindset. Now I found the right path: happiness, proudness, skillness, the will to learn and share, just being inconformist.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to learn a lot of things, and this blog will help me: I will share my new learnings, the articles or books I read, the courses I will take, the conferences I will assist&amp;hellip;.   I hope you will enjoy it, but also teach me.&lt;/p&gt;

&lt;p&gt;You also can follow me here:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;/p&gt;

&lt;ul class=&#34;icons&#34;&gt;
&lt;li&gt;&lt;a href=&#34;//github.com/magonye&#34; target=&#34;_blank&#34; title=&#34;GitHub&#34; class=&#34;fa fa-github&#34;&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;//linkedin.com/in/miguel-angel-gonzalez-yepes-11898244&#34; target=&#34;_blank&#34; title=&#34;LinkedIn&#34; class=&#34;fa fa-linkedin&#34;&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&#34;//twitter.com/MikeGonYe&#34; target=&#34;_blank&#34; title=&#34;Twitter&#34; class=&#34;fa fa-twitter&#34;&gt;&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>