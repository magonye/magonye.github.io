<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on Learnings and thoughts</title>
    <link>http://magonye.github.io/categories/tips/index.xml</link>
    <description>Recent content in Tips on Learnings and thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://magonye.github.io/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Git: how to squash commits already pushed</title>
      <link>http://magonye.github.io/post/git-squash/</link>
      <pubDate>Tue, 08 Aug 2017 08:30:46 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/git-squash/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://magonye.github.io/img/git-squash-photo.jpg&#34; alt=&#34;Git Squash Main photo&#34; title=&#34;Git Squash Main photo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A few days ago I was working on feature in a project, and after a lot of commits and pushes, I wanted to show to my colleagues my changes&amp;hellip;. but I wanted to show them in a single commit.&lt;/p&gt;

&lt;p&gt;How could I join my 10 commits in a single one?&lt;/p&gt;

&lt;p&gt;I had heard about squashing commits with git before, so I was confident it would be easy to do.&lt;/p&gt;

&lt;p&gt;Googling a little, and reading some examples, I was confident about what I had to do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git rebase -i HEAD~10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can look at the &lt;a href=&#34;https://git-scm.com/docs/git-rebase#_interactive_mode&#34;&gt;git documentation&lt;/a&gt;, if you want to know more about &lt;em&gt;git rebase&lt;/em&gt; command.&lt;/p&gt;

&lt;p&gt;The key is the interactive mode (&lt;strong&gt;-i&lt;/strong&gt;), that allows you to edit the commits which are being rebased.&lt;/p&gt;

&lt;p&gt;At this point, the editor  opened, with the list of commits that I was rebasing, and some instructions. Something similar to this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pick affab1e The first commit for the feature
pick accab1e The second commit for the feature
...
pick abcdef1 The last commit for the feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, I only had to change the second and following commits, replacing &lt;em&gt;pick&lt;/em&gt; with &lt;em&gt;squash&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pick affab1e The first commit for the feature
squash accab1e The second commit for the feature
...
squash abcdef1 The last commit for the feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After looking to my &lt;em&gt;git log&lt;/em&gt;, I was exulting. Now the log looked amazing, with my new brand feature in a very single commit.&lt;/p&gt;

&lt;p&gt;But the problems began when I tried to push the &lt;em&gt;rebased&lt;/em&gt; commit. Git didn&amp;rsquo;t allow me, because I was required to do a &lt;em&gt;git pull&lt;/em&gt; before.&lt;/p&gt;

&lt;p&gt;Here I got stack on an evil loop:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;https://magonye.github.io/img/git-squash-evilloop.png&#34; alt=&#34;Git Squash Evil Loop&#34; style=&#34;width: 400px;&#34;/&gt;&lt;br /&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After a few attempts, and the priceless help of a colleague, I realized that I couldn&amp;rsquo;t go forward with the squash this way.&lt;/p&gt;

&lt;p&gt;This process would work to me if I hadn&amp;rsquo;t pushed the commits that I wanted to squash. On this scenario, Git wouldn&amp;rsquo;t ask me for a &lt;em&gt;git pull&lt;/em&gt;, and I could push my squashed commit without problems. And that is because my remote repository wouldn&amp;rsquo;t have any of the commits I was trying to squash, as my local repo would be beyond my remote repo.&lt;/p&gt;

&lt;p&gt;What I needed to do was to force push with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git push origin +branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this command, that worked to me as a charm, finally I was able to push my feature to the branch as a single commit, although I had already pushed it before in separated commits.&lt;/p&gt;

&lt;p&gt;You can find more info about &lt;strong&gt;+&amp;lt;refspec&amp;gt;&lt;/strong&gt; command at the official documentation of &lt;a href=&#34;https://git-scm.com/docs/git-push#git-push---force&#34;&gt;git push&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Do you have any experience with squash? Do you know a better way to solve this? Please, give me your feedback, it will be very appreciated.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>