<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Learnings and thoughts</title>
    <link>http://magonye.github.io/post/</link>
    <description>Recent content in Posts on Learnings and thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Oct 2020 08:00:00 +0100</lastBuildDate><atom:link href="http://magonye.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working in an international company</title>
      <link>http://magonye.github.io/post/working-international-company/</link>
      <pubDate>Thu, 08 Oct 2020 08:00:00 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/working-international-company/</guid>
      <description>I&amp;rsquo;ve been working in international companies for more than two years. It has been a great experience, and I&amp;rsquo;ve enjoyed more than expected working on these kind of companies.
 DISCLAIMER 1: I know that some or all the points could be found in a national company, but I never did it before. This post is based on my own experience. I&amp;rsquo;m not trying to say that all internation companies are better than national ones, or that you can live the same experience I did just by joining any random company.</description>
    </item>
    
    <item>
      <title>Building Habits</title>
      <link>http://magonye.github.io/post/building-habits/</link>
      <pubDate>Sat, 01 Aug 2020 08:37:49 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/building-habits/</guid>
      <description>One of the things I&amp;rsquo;ve heard that it&amp;rsquo;s very tough for many people is to build habits that last in time, and become part of our life. Everyone probably knows what they should be doing, but they aren&amp;rsquo;t. It doesn&amp;rsquo;t have to be anything tech-related, it could be also some lifestyle activity, such as reading or practicing any kind of sport.
I&amp;rsquo;ve also found it&amp;rsquo;s very hard to maintain habits through time, so I&amp;rsquo;ll share with you the things that are working for me, and maybe you could also adopt.</description>
    </item>
    
    <item>
      <title>Another Step</title>
      <link>http://magonye.github.io/post/another-step/</link>
      <pubDate>Tue, 19 Jun 2018 08:37:49 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/another-step/</guid>
      <description>I’ve been working almost for 6 years at the same employer. It’s been the longest period in my professional career. When you are trying to get features to production quickly within a team, and at the same time learning new things and trying to refactor and improve your architecture, most of the time you don’t realize about how fast time happens.
But then, something happens. Maybe it is a teammate that leave the team (you know who you are, don’t you?</description>
    </item>
    
    <item>
      <title>march 2018</title>
      <link>http://magonye.github.io/post/march-2018/</link>
      <pubDate>Tue, 03 Apr 2018 16:56:56 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/march-2018/</guid>
      <description>This month I finished the book Extreme Programming Explained. And I&amp;rsquo;m starting reading the book The Pragmatic Programmer.
I read all these post and watched these videos during this month:
 Back To The Basics by Jason Gorman Introduction to IDD by Sandro Mancuso Growing your career by Nacho Duplication, you&amp;rsquo;re welcome by Rachel M. Carmena XP Simplicity Rules Kent Beck Design Rules Programming like Kent Beck The last responsible moment Should code have an expiry date?</description>
    </item>
    
    <item>
      <title>Simple Design</title>
      <link>http://magonye.github.io/post/simple-design/</link>
      <pubDate>Wed, 21 Mar 2018 08:37:49 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/simple-design/</guid>
      <description>Several months ago, I wrote about some known design principles: SOLID, YAGNI, DRY, &amp;hellip;.. (you can read the full post here). I was looking to understand and follow these principles for a goal: to write better code. And when I talk about &amp;ldquo;better&amp;rdquo; code, I mean readable and maintainable code. Code that every developer in a company should be able to maintain in a future. No matter if I&amp;rsquo;m still in the company or not.</description>
    </item>
    
    <item>
      <title>february 2018</title>
      <link>http://magonye.github.io/post/february-2018/</link>
      <pubDate>Sun, 04 Mar 2018 11:34:34 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/february-2018/</guid>
      <description>This month I read the book Understanding the Four Rules of Simple Design.
I read all these post and watched these videos during this month:
 Who is Jordan Peterson? Dr. Jordan Peterson&amp;rsquo;s 10 step guide to clearer thinking through essay writing The 12 Factor App: a java developers perspective 12 Factor App in plain english El manifiesto the Twelve Factor App 12 Factor App What does three question marks in scala mean Continuous Delivery: Germinando una cultura Agile moderna - by Edu Ferro Practical Test Pyramid by Martin Fowler Software as a Craft by Rachel M.</description>
    </item>
    
    <item>
      <title>CI/CD Pipeline Kata</title>
      <link>http://magonye.github.io/post/jenkins-kata/</link>
      <pubDate>Thu, 15 Feb 2018 08:08:34 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/jenkins-kata/</guid>
      <description>Some time ago other team was managing the pipeline of my team&amp;rsquo;s applications, and they were also testing and deploying our applications.
This separation of responsibility between creating the software and making it run was leading us to:
 No ownership of the deployment process: feeling of non responsibility within the team. Errors on environments: No visibility of where our code was being deployed was producing sometimes problems with configuration on environments, and they were tough to fix.</description>
    </item>
    
    <item>
      <title>january 2018</title>
      <link>http://magonye.github.io/post/january-2018/</link>
      <pubDate>Mon, 05 Feb 2018 08:24:53 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/january-2018/</guid>
      <description>I&amp;rsquo;ve started two new books: Functional Programming, Simplified: (Scala edition) and Extreme Programming Explained: Embrace Change (The XP Series).
I read all these post and watched these videos during this month:
 Microservices Architecture for eCommerce Valores y principios en el diseño del software - Fran Reyes #CAS2017 Kotlin for Java Programmers by Venkat Subramaniam  
Always learning!! Always improving!! Always sharing!!</description>
    </item>
    
    <item>
      <title>december 2017</title>
      <link>http://magonye.github.io/post/december-2017/</link>
      <pubDate>Tue, 09 Jan 2018 08:13:49 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/december-2017/</guid>
      <description>I&amp;rsquo;m actualy doing the Coursera course &amp;ldquo;Functional Programming Principles in Scala&amp;rdquo; by École Polytechnique Fédérale de Lausanne. This course is part of the Functional Programming in Scala Specialization. This course is taught by Martin Odersky, and it&amp;rsquo;s a great way to discover functional programming in Scala. I recommend it!
I read all these post and watched these videos during this month:
 Joan Tolos: Social Networking kata Sandro Mancuso: IDD Pragmatically storing security sensitive data using AWS KMS How to help protect sensitive data with AWS KMS Codemotion 2017: Node.</description>
    </item>
    
    <item>
      <title>november 2017</title>
      <link>http://magonye.github.io/post/november-2017/</link>
      <pubDate>Mon, 04 Dec 2017 08:10:01 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/november-2017/</guid>
      <description>I read all these post and watched these videos during this month:
 LSCConf 2017 Nat Pryce LSCConf 2017 Alex Bolboaca 4 Rules for Simple Design XP Simplicity Rules Adi Bolboaca: TDD as if you meant it 1 Adi Bolboaca: TDD as if you meant it 2 Adi Bolboaca: TDD as if you meant it 3 Adi Bolboaca: TDD as if you meant it 4 Adi Bolboaca: TDD as if you meant it 5 Adi Bolboaca: TDD as if you meant it 6 Adi Bolboaca: TDD as if you meant it 7</description>
    </item>
    
    <item>
      <title>Design Principles</title>
      <link>http://magonye.github.io/post/design-principles/</link>
      <pubDate>Fri, 10 Nov 2017 08:48:16 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/design-principles/</guid>
      <description>I had some concerns about Design Principles, so I talked with my mentor a little about them, their importance and we also tried to demystify them, why not?
Below there is a recap of the main design principles we covered with this exercise.
SOLID Principles Five design principles intended to make software designs more understandable, flexible and maintainable. They became very popular, as they were promoted by Robert C. Martin, and they are now key design principles in object oriented programming.</description>
    </item>
    
    <item>
      <title>october 2017</title>
      <link>http://magonye.github.io/post/october-2017/</link>
      <pubDate>Fri, 10 Nov 2017 08:05:53 +0100</pubDate>
      
      <guid>http://magonye.github.io/post/october-2017/</guid>
      <description>This month I started a new book: The Mythical Man-Month, within a Book Club.
I also stated watching the vide episodes by Adrian Balboaca about TDD as if you meant it.
Finally, I also added videos to my conferences videos, so, please, watch them and enjoy them as much as I did. You can find them here.
I read all these post and watched these videos during this month:
 docker health check instruction why isn’t agile working SOLID by yegor stop aliasing core git commands Knowing what is there entendiendo la nube: el significado de saas, paas y iaas How products got their names Lambda World Conference Crafting better code reviews Craft thinking  </description>
    </item>
    
    <item>
      <title>Culture Of Learning: Book Club</title>
      <link>http://magonye.github.io/post/cultureoflearning-bookclub/</link>
      <pubDate>Mon, 23 Oct 2017 08:21:27 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/cultureoflearning-bookclub/</guid>
      <description>Reading books is one of the activities everyone who is interested in software should do. It&amp;rsquo;s a great way to learn new things, new points of view, new theories or practices. There are several books that every developer should read. But sometimes it&amp;rsquo;s difficult to get time to read it, you aren&amp;rsquo;t motivated enough, or even if you are reading the book, the book is hard to understand.
By reading a book in a Book Club, you will discover a new way of learning from a book.</description>
    </item>
    
    <item>
      <title>Software Craftsmanship Barcelona 2017</title>
      <link>http://magonye.github.io/post/scbcn2017/</link>
      <pubDate>Mon, 09 Oct 2017 08:21:33 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/scbcn2017/</guid>
      <description>On 7th and 8th October, it took place the Software Craftsmanship Barcelona 2017 conference. It was my first time at the conference, that was celebrating its 5th edition. I had a great experience there!!
Software Craftsmanship There are really a lot of definitions of what is Software Craftsmanship, on Wikipedia there is a extensive definition, but I would like to write what Mash told me once:
 Software Craftsmanship is all about learning and teaching</description>
    </item>
    
    <item>
      <title>september 2017</title>
      <link>http://magonye.github.io/post/september-2017/</link>
      <pubDate>Sun, 01 Oct 2017 08:29:31 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/september-2017/</guid>
      <description>I finished The Software Craftsman: Professionalism, Pragmatism, Pride by Sandro Mancuso. It&amp;rsquo;s an incredible book, very inspirational and plenty of good advices. I will review and publish it soon.
I read all these post and watched these videos during this month:
 do we have a good safety net to change this legacy code its not just someone else&amp;rsquo;s computer what is blockchain 6 tools to boost your development workflow como gestionar tu blog con trello how disobedience made me better heres what you can learn in 10 minutes that will be useful for the rest of your programming career docker swarm tutorial Start using Java 9 shell jshell with docker java se support for docker cpu and memory limits java inside docker jshell tutorial the insecure developer mvc delievery mechanism dm  life at codurance by robert firek Mars Rover kata by Sandro Mancuso</description>
    </item>
    
    <item>
      <title>JShell, the REPL console in Java 9</title>
      <link>http://magonye.github.io/post/java-9-repl/</link>
      <pubDate>Wed, 27 Sep 2017 08:22:31 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/java-9-repl/</guid>
      <description>On this post, I will cover one of the new Java 9 features that attracted my attention: REPL.
If you want to know what&amp;rsquo;s new on Java 9, you can visit this link.
What is a REPL REPL stands for Read-Eval-Print-Loop. It&amp;rsquo;s a shell where the user can type an expression, it will be evaluated, and the result will be returned to the user.
To me, the main purpose is to interact quickly with Java without creating a java file, compile it and run it.</description>
    </item>
    
    <item>
      <title>Culture Of Learning: Lunch and Learn</title>
      <link>http://magonye.github.io/post/cultureoflearning-lunchandlearn/</link>
      <pubDate>Tue, 19 Sep 2017 08:29:56 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/cultureoflearning-lunchandlearn/</guid>
      <description>During this year we are experiencing a very huge transformation as a team. We are living an interesting journey to become a more mature team, an autonomous team inside the company. And this transformation includes a lot of practices and activities. With this series of posts, that I&amp;rsquo;ll call Culture of Learning, I will try to explain in detail each of these activities, how we started them, how we do them and what they give us.</description>
    </item>
    
    <item>
      <title>august 2017</title>
      <link>http://magonye.github.io/post/august-2017/</link>
      <pubDate>Fri, 01 Sep 2017 15:12:35 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/august-2017/</guid>
      <description>This month I did the following things:
 Book Club: Actually reading The Software Craftsman by Sandro Mancuso, and NonViolent Comunication by Marshall B. Rosenberg. Typing training: I started doing some typing training at typing.com. There are other options, like typingstudy.com, typingclub.com or cursomeca.com. I&amp;rsquo;ll try them soon. Software design patterns: I started reviewing software design patterns at sourcemaking.com. This is something I need to improve, in order to know and understand them better.</description>
    </item>
    
    <item>
      <title>JBCNConf 2017</title>
      <link>http://magonye.github.io/post/jbcnconf2017/</link>
      <pubDate>Wed, 23 Aug 2017 12:55:48 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/jbcnconf2017/</guid>
      <description>On 19th, 20th and 21st of June, I assisted to JBCNConf2017 with two colleagues. For me was the second time, as I assisted to JBCNConf last year.
In this post, I will try to explain you a little what is JBCNConf, why it&amp;rsquo;s important to assist to conferences, and how was my experience at this conference.
I know that I&amp;rsquo;m late, because I&amp;rsquo;m writing this on August and the conference was on June, but I didn&amp;rsquo;t want to miss the opportunity to write about JBCNConf, and payback something to the conference in return, as I learned a lot of things there.</description>
    </item>
    
    <item>
      <title>Password Manager: Why and how to store passwords securely</title>
      <link>http://magonye.github.io/post/password-manager/</link>
      <pubDate>Thu, 17 Aug 2017 08:26:43 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/password-manager/</guid>
      <description>The Problem Currently I&amp;rsquo;m working on a the team that needs to handle with a lot of passwords. These passwords are critical for the company, as they are mainly Payment Provider password accounts. Since now, we were using different kind of storage mechanisms, non of them really secure (internal confluence pages, shared plain text files, etc&amp;hellip;).
So, in order to upgrade our security standards, we needed to choose some mechanism that could provide us the following features:</description>
    </item>
    
    <item>
      <title>Git: how to squash commits already pushed</title>
      <link>http://magonye.github.io/post/git-squash/</link>
      <pubDate>Tue, 08 Aug 2017 08:30:46 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/git-squash/</guid>
      <description>A few days ago I was working on feature in a project, and after a lot of commits and pushes, I wanted to show to my colleagues my changes&amp;hellip;. but I wanted to show them in a single commit.
How could I join my 10 commits in a single one?
I had heard about squashing commits with git before, so I was confident it would be easy to do.
Googling a little, and reading some examples, I was confident about what I had to do:</description>
    </item>
    
    <item>
      <title>july 2017</title>
      <link>http://magonye.github.io/post/july-2017/</link>
      <pubDate>Sat, 05 Aug 2017 09:33:07 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/july-2017/</guid>
      <description>It was a very challenging month!
We started a Community of Practice at my work. It&amp;rsquo;s very exciting to share and learn things with other colleagues. We&amp;rsquo;re doing some katas and lighting talks. It&amp;rsquo;s only the beginning, but I think we can improve a lot with these meetings.
I&amp;rsquo;m also reading some books. I&amp;rsquo;m reading two of them (Sandro Mancuso&amp;rsquo;s The Software Craftsman and Growing Object Oriented Software) with other people.</description>
    </item>
    
    <item>
      <title>june 2017</title>
      <link>http://magonye.github.io/post/june-2017/</link>
      <pubDate>Fri, 30 Jun 2017 20:43:32 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/june-2017/</guid>
      <description>This month has been a very productive one. Actually I&amp;rsquo;m reading three books at a time: Clean Code [Uncle Bob], Test Driven Development by Example [Kent Beck] and The Software Craftsman [Sandro Mancuso].
Besides the books, I&amp;rsquo;ve read the following links:
 INTERACTION DRIVEN DESIGN - Sandro Mancuso Introduction to DDD Toma-de-requisitos Logs Technical debt Security on APIs Ron Jeffries&#39; Refactoring Builder design pattern Sandro Mancuso&amp;rsquo;s Codurance Blog - How do I convince&amp;hellip; Chapter 22 of Growing Object-Oriented Software (Goos) NoTDD  </description>
    </item>
    
    <item>
      <title>may 2017</title>
      <link>http://magonye.github.io/post/may-2017/</link>
      <pubDate>Sat, 24 Jun 2017 01:06:03 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/may-2017/</guid>
      <description>This month has been a very quiet month. No much reading.
I&amp;rsquo;ve just finished the &amp;ldquo;Learning how to learn&amp;rdquo; course at Coursera.
I also finished a very interesting course at Udemy: &amp;ldquo;How to become a better developer&amp;rdquo;.
I would recommend both courses to everybody. They are clear, very well explained, and the topics are very helpfull. If you want to be a better developer and you have a lot of things to learn, you may consider to take these courses.</description>
    </item>
    
    <item>
      <title>april 2017</title>
      <link>http://magonye.github.io/post/april-2017/</link>
      <pubDate>Sun, 30 Apr 2017 18:07:02 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/april-2017/</guid>
      <description>My current read book is Clean Code, by Robert C. Martin. This is a MUST book, and it&amp;rsquo;s some kind embarrassing I didn&amp;rsquo;t read it before.
I&amp;rsquo;m also attending the &amp;ldquo;Learning how to learn&amp;rdquo; course at Coursera.
With the book, I&amp;rsquo;m trying to fix my fault, and with the course I&amp;rsquo;m trying to pave the road. If I want to learn a lot of things, I need to know how to become efficient.</description>
    </item>
    
    <item>
      <title>welcome to my blog</title>
      <link>http://magonye.github.io/post/welcome-to-my-blog/</link>
      <pubDate>Fri, 31 Mar 2017 23:43:44 +0200</pubDate>
      
      <guid>http://magonye.github.io/post/welcome-to-my-blog/</guid>
      <description>I&amp;rsquo;ve just created this blog for learning pourposes. I&amp;rsquo;m going to learn a lot of things. I think this blog can help me, but also some of my learnings can help someone else.
I hope you enjoy it as I&amp;rsquo;m going to enjoy it, and feel free to comment, suggest or correct any of the content I will be posting here.
Remember that everything is about learning, enjoying, sharing and teaching.</description>
    </item>
    
  </channel>
</rss>
